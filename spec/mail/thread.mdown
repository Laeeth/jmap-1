# Threads

Replies are grouped together with the original message to form a thread. In JMAP, a thread is simply a flat list of emails, ordered by date. Every email MUST belong to a thread, even if it is the only email in the thread.

The JMAP spec does not require the server to use any particular algorithm for determining whether two emails belong to the same thread, however there is a recommended algorithm in the [implementation guide](server.html).

If emails are delivered out of order for some reason, a user may receive two emails in the same thread but without headers that associate them with each other. The arrival of a third email in the thread may provide the missing references to join them all together into a single thread. Since the *threadId* of an email is immutable, if the server wishes to merge the threads, it MUST handle this by deleting and reinserting (with a new email id) the emails that change threadId.

A **Thread** object has the following properties:

- **id**: `String` (immutable)
  The id of the thread.
- **emailIds**: `String[]`
  The ids of the emails in the thread, sorted such that:

    - Any email with the `$Draft` keyword that has an `In-Reply-To` header is sorted after the *first* non-draft email in the thread with the corresponding `Message-Id` header, but before any subsequent non-draft emails.
    - Other than that, everything is sorted by the *receivedAt* date of the email, oldest first.
    - If two emails are identical under the above two conditions, the sort is server-dependent but MUST be stable (sorting by id is recommended).

The following JMAP methods are supported:

## getThreads

Standard *getFoos* method.

### Example

Request:

    [ "getThreads", {
      "ids": ["f123u4", "f41u44"],
    }, "#1" ]

with response:

    [ "threads", {
      "accountId": "acme",
      "state": "f6a7e214",
      "list": [
        {
          "id": "f123u4",
          "emailIds": [ "eaa623", "f782cbb"]
        },
        {
          "id": "f41u44",
          "emailIds": [ "82cf7bb" ]
        }
      ],
      "notFound": null
    }, "#1" ]


## getThreadsUpdates

Standard *getFoosUpdates* method.
