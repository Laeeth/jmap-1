# Calendars

A Calendar is a named collection of events. All events are associated with one, and only one, calendar.

A **Calendar** object has the following properties:

- **id**: `String` (immutable; server-set)
  The id of the calendar.
- **name**: `String`
  The user-visible name of the calendar. This may be any UTF-8 string of at least 1 character in length and maximum 256 bytes in size.
- **color**: `String`
  Any valid CSS color value. The color to be used when displaying events associated with the calendar. The color SHOULD have sufficient contrast to be used as text on a white background.
- **sortOrder**: `Number` (default: `0`)
  Defines the sort order of calendars when presented in the client's UI, so it is
  consistent between devices. The number MUST be an integer in the range
  0 <= sortOrder < 2^31.

  A calendar with a lower order should be displayed before a calendar with
  a higher order in any list of calendars in the client's UI. Calendars with
  equal order should be sorted in alphabetical order by name. The sorting
  should take into locale-specific character order convention.
- **isVisible**: `Boolean` (default: `true`)
  Should the calendar's events be displayed to the user at the moment?
- **mayReadFreeBusy**: `Boolean` (server-set)
  The user may read the free-busy information for this calendar. In JMAP
  terms, this means the user may use this calendar as part of a filter in a
  *getCalendarEventsList* call, however unless `mayRead == true`, the events
  returned for this calendar will only contain free-busy information, and be stripped of any other data.
  This property MUST be `true` if *mayRead* is `true`.
- **mayReadItems**: `Boolean` (server-set)
  The user may fetch the events in this calendar. In JMAP terms, this means
  the user may use this calendar as part of a filter in a
  *getCalendarEventsList* call
- **mayAddItems**: `Boolean` (server-set)
  The user may add events to this calendar. In JMAP terms, this means the
  user may call *setCalendarEvents* to create new events in this calendar or
  move existing events into this calendar from another calendar.
  This property MUST be `false` if the account to which this calendar belongs
  has the *isReadOnly* property set to `true`.
- **mayModifyItems**: `Boolean` (server-set)
  The user may edit events in this calendar by calling *setCalendarEvents* with
  the *update* argument referencing events in this collection.
  This property MUST be `false` if the account to which this calendar belongs
  has the *isReadOnly* property set to `true`.
- **mayRemoveItems**: `Boolean` (server-set)
  The user may remove events from this calendar by calling *setCalendarEvents*
  with the *destroy* argument referencing events in this collection, or by
  updating their *calendarId* property to a different calendar.
  This property MUST be `false` if the account to which this calendar belongs
  has the *isReadOnly* property set to `true`.
- **mayRename**: `Boolean` (server-set)
  The user may rename the calendar.
  This property MUST be `false` if the account to which this calendar belongs
  has the *isReadOnly* property set to `true`.
- **mayDelete**: `Boolean` (server-set)
  The user may delete the calendar itself.
  This property MUST be `false` if the account to which this calendar belongs
  has the *isReadOnly* property set to `true`.


## getCalendars

Standard *getFoos* method. The *ids* argument may be `null` to fetch all at once.

## getCalendarsUpdates

Standard *getFoosUpdates* method.

## setCalendars

Standard *setFoos* method.

A calendar MAY be deleted that is currently associated with one or more events. In this case, the events belonging to this calendar MUST also be deleted. Conceptually, this MUST happen prior to the calendar itself being deleted, and MUST generate a **push** event that modifies the state of the *CalendarEvent* type for the account.
